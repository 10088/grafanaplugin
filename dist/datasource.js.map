{"version":3,"sources":["../src/datasource.js"],"names":["GenericDatasource","instanceSettings","$q","backendSrv","templateSrv","type","url","name","q","headers","Authorization","getAuthorization","jsonData","options","targets","buildQueryParameters","length","when","data","doRequest","method","then","response","status","message","title","res","_","map","target","find","refId","isObject","timeshift","datapoints","unit2millis","seconds","minutes","hours","days","weeks","months","datapoint","period","unit","value","console","log","hide","sqlQueries","filter","queryType","arithmeticQueries","targetRefIds","Promise","all","datasourceRequest","postQuery","flatMap","targetResults","fromPairs","functionArgs","join","functionBody","expression","expressionFunction","Function","values","result","ts","groupBy","dps","dp","args","get","apply","err","tsint","parseInt","isNaN","alias","concat","sql","generateSql","isArray","generateAlias","input","_keyStr","output","chr1","chr2","chr3","enc1","enc2","enc3","enc4","i","charCodeAt","charAt","defaultUser","user","defaultPassword","password","encode","replace","scopedVars","queryStart","range","from","toISOString","queryEnd","to","intervalMs","getVariables","variables","re","RegExp","v","matches","match","isNull","cartesian","first","rest","c","expanded","eq","current","o","option","variable","reduce","exp","vv","e","vvv","size","sql2","query","req","tempList","Array","forEach","item","end","push","expendable","text","Set","catch"],"mappings":"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","file":"datasource.js","sourcesContent":["import _ from \"lodash\";\nimport \"moment\";\n\nexport class GenericDatasource {\n\n  constructor(instanceSettings, $q, backendSrv, templateSrv) {\n    this.type = instanceSettings.type;\n    this.url = instanceSettings.url;\n    this.name = instanceSettings.name;\n    this.q = $q;\n    this.backendSrv = backendSrv;\n    this.templateSrv = templateSrv;\n    this.headers = { 'Content-Type': 'application/json' };\n    this.headers.Authorization = this.getAuthorization(instanceSettings.jsonData);\n  }\n\n  query(options) {\n    var targets = this.buildQueryParameters(options);\n\n    if (targets.length <= 0) {\n      return this.q.when({ data: [] });\n    }\n\n    return this.doRequest({\n      url: this.url + '/grafana/query',\n      data: targets,\n      method: 'POST'\n    });\n  }\n\n  testDatasource() {\n    return this.doRequest({\n      url: this.url + '/grafana/heartbeat',\n      method: 'GET',\n    }).then(response => {\n      if (response.status === 200) {\n        return { status: \"success\", message: \"TDengine Data source is working\", title: \"Success\" };\n      }\n    });\n  }\n\n  postQuery(options, res) {\n    res.data = _.map(res.data, function (data) {\n      let target = _.find(options.data, { refId: data.refId });\n      if (_.isObject(target.timeshift)) {\n        data.datapoints = _(data.datapoints).map(datapoint => {\n          const unit2millis = {\n            seconds: 1000,\n            minutes: 60 * 1000,\n            hours: 60 * 60 * 1000,\n            days: 24 * 60 * 60 * 1000,\n            weeks: 7 * 24 * 60 * 60 * 1000,\n            months: 30 * 24 * 60 * 60 * 1000,\n          };\n          datapoint[1] += target.timeshift.period * unit2millis[target.timeshift.unit];\n          return datapoint\n        }).value();\n      }\n      console.log(\"target:\", target);\n      data.hide = target.hide;\n      return data;\n    });\n    return res;\n  }\n\n  doRequest(options) {\n    options.headers = this.headers;\n    let sqlQueries = _.filter(options.data, { queryType: \"SQL\" });\n    let arithmeticQueries = _.filter(options.data, { queryType: \"Arithmetic\" });\n    let targetRefIds = _.map(sqlQueries, ({refId}) => refId);\n\n    return Promise.all(_.map(sqlQueries, target => {\n      return this.backendSrv\n        .datasourceRequest({ ...options, data: [target] })\n        .then(res => this.postQuery(options, res));\n    }))\n      .then(res => {\n        return { ...res[0], data: _.flatMap(res, ({ data }) => data) };\n      }).then(res => {\n        console.log(res);\n        let targetResults = _(res.data).map(target => [target.refId, target]).fromPairs().value();\n        let data = _.map(arithmeticQueries, target => {\n          let functionArgs = targetRefIds.join(', ');\n          let functionBody = \"return (\" + target.expression + \");\";\n          let expressionFunction = new Function(functionArgs, functionBody);\n\n          let datapoints = _(targetResults).values()\n            .flatMap(result => _.map(result.datapoints, datapoint => {\n            return { value: datapoint[0], ts: datapoint[1], refId: result.refId };\n            }))\n            .groupBy('ts')\n            .map((datapoints, ts) => {\n              let dps = _(datapoints).map(dp => [dp.refId, dp.value]).fromPairs().value();\n              let args = _.map(targetRefIds, refId => _.get(dps, refId));\n              let result = null;\n              try {\n                result = expressionFunction.apply(this, args)\n              }\n              catch(err) {\n                console.log(\"expression function eval error:\", err);\n              }\n              let tsint = parseInt(ts);\n              return [result, _.isNaN(tsint) ? ts : tsint]\n            })\n            .value();\n          return { ...target, target: target.alias, refId: target.refId, datapoints };\n        });\n        res.data = _.concat(res.data, data);\n        return res\n      });\n  }\n\n  buildQueryParameters(options) {\n    var targets = _.flatMap(options.targets, target => {\n      let sql = this.generateSql(options, target);\n      if (_.isArray(sql)) {\n        return sql;\n      } else {\n        return [{\n          ...target,\n          alias: this.generateAlias(options, target),\n          sql,\n        }];\n      }\n    });\n    return targets;\n  }\n\n  encode(input) {\n    var _keyStr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n    var output = \"\";\n    var chr1, chr2, chr3, enc1, enc2, enc3, enc4;\n    var i = 0;\n    while (i < input.length) {\n      chr1 = input.charCodeAt(i++);\n      chr2 = input.charCodeAt(i++);\n      chr3 = input.charCodeAt(i++);\n      enc1 = chr1 >> 2;\n      enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n      enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n      enc4 = chr3 & 63;\n      if (isNaN(chr2)) {\n        enc3 = enc4 = 64;\n      } else if (isNaN(chr3)) {\n        enc4 = 64;\n      }\n      output = output + _keyStr.charAt(enc1) + _keyStr.charAt(enc2) + _keyStr.charAt(enc3) + _keyStr.charAt(enc4);\n    }\n\n    return output;\n  }\n\n  getAuthorization(jsonData) {\n    jsonData = jsonData || {};\n    var defaultUser = jsonData.user || \"root\";\n    var defaultPassword = jsonData.password || \"taosdata\";\n\n    return \"Basic \" + this.encode(defaultUser + \":\" + defaultPassword);\n  }\n\n  generateTimeshift(options, target) {\n    var alias = target.alias || \"\";\n    alias = this.templateSrv.replace(alias, options.scopedVars, 'csv');\n    return alias;\n  }\n  generateAlias(options, target) {\n    var alias = target.alias || \"\";\n    console.log(options);\n    alias = this.templateSrv.replace(alias, options.scopedVars, 'csv');\n    return alias;\n  }\n\n  generateSql(options, target) {\n    var sql = target.sql;\n    if (sql == null || sql == \"\") {\n      return sql;\n    }\n\n    var queryStart = \"now-1h\";\n    if (options != null && options.range != null && options.range.from != null) {\n      queryStart = options.range.from.toISOString();\n    }\n\n    var queryEnd = \"now\";\n    if (options != null && options.range != null && options.range.to != null) {\n      queryEnd = options.range.to.toISOString();\n    }\n    var intervalMs = options.intervalMs || \"20000\";\n\n    intervalMs += \"a\";\n    sql = sql.replace(/^\\s+|\\s+$/gm, '');\n    sql = sql.replace(\"$from\", \"'\" + queryStart + \"'\");\n    sql = sql.replace(\"$begin\", \"'\" + queryStart + \"'\");\n    sql = sql.replace(\"$to\", \"'\" + queryEnd + \"'\");\n    sql = sql.replace(\"$end\", \"'\" + queryEnd + \"'\");\n    sql = sql.replace(\"$interval\", intervalMs);\n    console.log(this.templateSrv.getVariables());\n\n    let variables = _(this.templateSrv.getVariables()).flatMap(v => {\n      let re = new RegExp(\"\\\\$(\\{\" + v.name + \"(:\\\\S+)?\\}|\" + v.name + \")\")\n      let matches = sql.match(re)\n      if (_.isNull(matches)) {\n        return []\n      } else {\n        return [{ matches, ...v }];\n      }\n    }).value();\n\n    const cartesian = (first, ...rest) =>\n      rest.length ? first.flatMap(v => cartesian(...rest).map(c => [v].concat(c)))\n        : first;\n    let expanded = _(variables).map(v => {\n      if (_.eq(v.current.value, \"$__all\")) {\n        return _(v.options)\n          .filter(o => o.value != \"$__all\")\n          .map(o => { return { option: o.value, variable: v }; })\n          .value();\n      } else if (_.isArray(v.current.value)) {\n        return _(v.current.value)\n          .map(option => { return { option, variable: v }; })\n          .value();\n      } {\n        return []\n      }\n    }).reduce((exp, vv) => {\n      return _.flatMap(vv, vvv => {\n        return exp.length ? _.map(exp, e => _.concat([e], vvv)) : [[vvv]]\n      });\n    }, []);\n\n    if (_.size(expanded) > 0) {\n      return _(expanded)\n        .map((vv, i) => {\n          console.log(vv, i);\n          let sql2 = _(vv).reduce((sql, { option, variable }) => {\n            return _.replace(sql, variable.matches[0], option)\n          }, sql);\n\n          let alias = _(vv).reduce((sql, { option, variable }) => {\n            return _.replace(sql, variable.matches[0], option)\n          }, target.alias || \"\");\n\n          sql2 = this.templateSrv.replace(sql2, options.scopedVars, 'csv');\n          return {\n            refId: target.refId + \"_\" + i,\n            alias,\n            sql: sql2,\n            timeshift: target.timeshift\n          }\n        })\n        .value();\n    } else {\n      sql = this.templateSrv.replace(sql, options.scopedVars, 'csv');\n      return sql;\n    }\n  }\n  metricFindQuery(query, options) {\n    console.log(\"metric find query\");\n    // query like 'select  name  from dbtest.t;'\n    const targets = [\n      {\n        alias: \"\",\n        refId: \"A\",\n        sql: query,\n      },\n    ];\n    let req = {\n      url: this.url + \"/grafana/query\",\n      data: targets,\n      method: \"POST\",\n    };\n    return this.doRequest(req).then((res) => {\n      let tempList = [];\n      (Array.isArray(_.get(res, 'data')) ? res.data : []).forEach((item) => {\n        (Array.isArray(item.datapoints) ? item.datapoints : []).forEach(\n          (end) => {\n            tempList.push({\n              expendable: false,\n              text: end[0],\n              value: end[0],\n            });\n          }\n        );\n      });\n      return Array.from(new Set(tempList));\n    }).catch(err => {\n      console.log(\"err: \", err)\n    });\n  }\n\n}\n"]}