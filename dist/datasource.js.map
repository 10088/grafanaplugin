{"version":3,"sources":["../src/datasource.js"],"names":["moment","require","GenericDatasource","instanceSettings","$q","backendSrv","templateSrv","console","log","type","url","name","q","headers","Authorization","getAuthorization","jsonData","timezone","Intl","DateTimeFormat","resolvedOptions","timeZone","options","targets","filter","target","queryType","sql","hide","length","when","data","Promise","all","map","request","generateSql","then","postQuery","res","arithmeticQueries","flat","err","Error","JSON","stringify","response","status","message","title","params","resolve","reject","datasourceRequest","method","alias","aliasRow","regex","replace","match","g1","g2","group","queryStart","range","from","toISOString","queryEnd","to","intervalMs","toString","allVaribles","getVariables","i","current","value","query","column_meta","rows","cols","result","aliasList","split","timeSeriesIndex","findIndex","item","formatType","push","columns","text","refId","getRowAlias","resultItem","datapoints","k","timeShiftDuration","duration","timeshift","period","unit","utc","tz","add","valueOf","expression","targetRefIds","flatMap","field","index","targetResults","forEach","datapoint","dataArithmetic","functionArgs","join","functionBody","expressionFunction","Function","aliasListResult","Object","entries","args","apply","error","Array","isArray","concat","input","_keyStr","output","chr1","chr2","chr3","enc1","enc2","enc3","enc4","charCodeAt","isNaN","charAt","defaultUser","user","defaultPassword","password","encode","scopedVars","values"],"mappings":"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","file":"datasource.js","sourcesContent":["import _ from \"lodash\";\r\nvar moment = require('./js/moment-timezone-with-data');\r\nexport class GenericDatasource {\r\n\r\n  constructor(instanceSettings, $q, backendSrv, templateSrv) {\r\n    console.log(\"instanceSettings\",instanceSettings);\r\n    this.type = instanceSettings.type;\r\n    this.url = instanceSettings.url;\r\n    this.name = instanceSettings.name;\r\n    this.q = $q;\r\n    this.backendSrv = backendSrv;\r\n    this.templateSrv = templateSrv;\r\n    this.headers = { 'Content-Type': 'application/json' };\r\n    this.headers.Authorization = this.getAuthorization(instanceSettings.jsonData);\r\n    this.timezone=Intl.DateTimeFormat().resolvedOptions().timeZone;\r\n    this.options=null;\r\n  }\r\n\r\n  query(options) {\r\n    console.log('options',options);\r\n    this.options=options;\r\n    if (this.options.timezone) {\r\n      this.timezone = this.options.timezone==\"browser\"?Intl.DateTimeFormat().resolvedOptions().timeZone:this.options.timezone;\r\n    }\r\n    const targets = this.options.targets.filter((target) => (!target.queryType||target.queryType === \"SQL\")&&target.sql&&!(target.hide===true));\r\n    if (targets.length <= 0) {\r\n      return this.q.when({ data: [] });\r\n    }\r\n\r\n    return Promise.all(targets.map(target=>this.request('/rest/sql',this.generateSql(target.sql)).then(res=>this.postQuery(target,res))))\r\n      .then(data => (console.log('{data:this.arithmeticQueries(data).flat()}',{data:this.arithmeticQueries(data).flat()}),{data:this.arithmeticQueries(data).flat()}),(err)=>{console.log(err);throw new Error(JSON.stringify(err))});\r\n  }\r\n\r\n  testDatasource() {\r\n    return this.request('/rest/sql','show databases').then(response => {\r\n        if (!!response && response.status === 200) {\r\n          return { status: \"success\", message: \"TDengine Data source is working\", title: \"Success\" };\r\n        }\r\n        return { status: \"error\", message: \"TDengine Data source is not working\", title: \"Failed\" };\r\n      });\r\n  }\r\n\r\n  request(url , params) {\r\n    if (!params) {\r\n      return new Promise((resolve, reject)=>{\r\n        resolve();\r\n      });\r\n    }\r\n    return this.backendSrv.datasourceRequest({\r\n      url: `${this.url}${url}`,\r\n      data: params,\r\n      method: 'POST',\r\n      headers: this.headers,\r\n    });\r\n  }\r\n\r\n  getRowAlias(alias, aliasRow) {\r\n    if (!alias) {\r\n      return aliasRow;\r\n    }\r\n    alias=this.generateSql(alias);\r\n    const regex = /\\$(\\w+)|\\[\\[([\\s\\S]+?)\\]\\]/g;\r\n    return alias.replace(regex,(match, g1, g2) => {\r\n      const group = g1 || g2;\r\n\r\n      if (group === 'col') {\r\n        return aliasRow;\r\n      }\r\n      return match;\r\n    });\r\n  }\r\n  generateSql(sql) {\r\n    console.log('sql',sql);\r\n    if (!sql||sql.length==0) {\r\n      return sql;\r\n    }\r\n\r\n    var queryStart = \"now-1h\";\r\n    if (!!this.options.range && !!this.options.range.from ) {\r\n      queryStart = this.options.range.from.toISOString();\r\n    }\r\n\r\n    var queryEnd = \"now\";\r\n    if (!!this.options.range && !!this.options.range.to ) {\r\n      queryEnd = this.options.range.to.toISOString();\r\n    }\r\n    \r\n    var intervalMs = \"20000\";\r\n    if (!!this.options.intervalMs ) {\r\n      intervalMs = this.options.intervalMs.toString();\r\n    }\r\n\r\n    intervalMs += \"a\";\r\n    sql = sql.replace(/^\\s+|\\s+$/gm, '');\r\n    sql = sql.replace(\"$from\", \"'\" + queryStart + \"'\");\r\n    sql = sql.replace(\"$begin\", \"'\" + queryStart + \"'\");\r\n    sql = sql.replace(\"$to\", \"'\" + queryEnd + \"'\");\r\n    sql = sql.replace(\"$end\", \"'\" + queryEnd + \"'\");\r\n    sql = sql.replace(\"$interval\", intervalMs);\r\n    \r\n    const allVaribles = this.templateSrv.getVariables ? this.templateSrv.getVariables() : [];\r\n    for (let i = 0; i < allVaribles.length; i++) {\r\n      if (allVaribles[i].current&&allVaribles[i].current.value) {\r\n        sql = sql.replace(\"$\"+allVaribles[i].name, allVaribles[i].current.value);\r\n      }\r\n    }\r\n\r\n    return sql;\r\n  }\r\n\r\n  postQuery(query, response) {\r\n    console.log('query',query);\r\n    console.log('response',response);\r\n    if (!response||!response.data||!response.data.data) {\r\n      return [];\r\n    }\r\n    const headers = response.data.column_meta;\r\n    const data = response.data.data;\r\n    const rows = response.data.rows;\r\n    const cols = headers.length;\r\n    const result = [];\r\n    const aliasList = query.alias.split(',')||[];\r\n    if (!!headers&&!!headers[0]&&!!headers[0][1]) {\r\n      const timeSeriesIndex = headers.findIndex(item=>item[1]===9);\r\n      if (timeSeriesIndex==-1||query.formatType=='Table') {\r\n        result.push({columns:headers.map(item=>({text:item[0]})),rows:data,type:'table',refId:query.refId,target:this.getRowAlias(aliasList[0],headers[0][0]),hide:!!query.hide});\r\n      }else{\r\n        for (let i = 0; i < cols; i++) {\r\n          if (i==timeSeriesIndex) {\r\n            continue;\r\n          }\r\n          let aliasRow = headers[i][0];\r\n          if (i<=aliasList.length) {\r\n            aliasRow=this.getRowAlias(aliasList[i-1],aliasRow);\r\n          }\r\n          let resultItem={datapoints:[],refId:query.refId,target:aliasRow,hide:!!query.hide};\r\n          for (let k = 0; k < rows; k++) {\r\n            let timeShiftDuration = moment.duration();\r\n            if (query.timeshift&&query.timeshift.period&&query.timeshift.unit) {\r\n              timeShiftDuration=moment.duration(query.timeshift.period,query.timeshift.unit);\r\n            }\r\n            resultItem.datapoints.push([data[k][i],moment.utc(data[k][timeSeriesIndex]).tz(this.timezone).add(timeShiftDuration).valueOf()]);\r\n          }\r\n          result.push(resultItem);\r\n        }\r\n      }\r\n    }\r\n    console.log('result',result);\r\n    return result;\r\n  }\r\n  arithmeticQueries(data) {\r\n    const arithmeticQueries = this.options.targets.filter((target) => target.queryType === \"Arithmetic\"&&target.expression&&!(target.hide===true));\r\n    if (arithmeticQueries.length == 0) return data;\r\n    let targetRefIds = data.flatMap((item)=>item.flatMap((field,index)=>(index==0?[field.refId,field.refId+'__'+index]:[field.refId+'__'+index])));\r\n    console.log('targetRefIds',targetRefIds);\r\n    let targetResults = {};\r\n    data.forEach((item)=>{\r\n      item.forEach((field,index)=>{\r\n        field.datapoints.forEach(datapoint=>{\r\n          targetResults[datapoint[1]]=targetResults[datapoint[1]]||[];\r\n          if (index==0) {\r\n            targetResults[datapoint[1]].push(datapoint[0]);\r\n          }\r\n          targetResults[datapoint[1]].push(datapoint[0]);\r\n        })\r\n      })\r\n    });\r\n    \r\n    try {\r\n      let dataArithmetic = arithmeticQueries.map(target => {\r\n        let functionArgs = targetRefIds.join(', ');\r\n        let functionBody = \"return (\" + target.expression + \");\";\r\n        let expressionFunction = new Function(functionArgs, functionBody);\r\n        let result = null;\r\n        const aliasList=(target.alias||'').split(',').map(alias=>this.getRowAlias(alias,target.refId));\r\n\r\n        const aliasListResult = [];\r\n        Object.entries(targetResults).forEach(args=>{\r\n          if (args[1].length===targetRefIds.length) {\r\n            try {\r\n              result = expressionFunction.apply(this, args[1]);\r\n            } catch (error) {\r\n              throw error\r\n            }\r\n          }\r\n          // else{\r\n          //   console.log('args not full',targetRefIds,args);\r\n          // }\r\n          if (!Array.isArray(result)) {\r\n            result=[result];\r\n          }\r\n          result.forEach((item,index)=>{\r\n            aliasListResult[index]=aliasListResult[index]||{datapoints:[],refId:target.refId,target:aliasList[index]||(target.refId+'__'+index),hide:!!target.hide};\r\n            aliasListResult[index].datapoints.push([item,args[0]]);\r\n          })\r\n        });\r\n        return aliasListResult;\r\n      });\r\n      return data.concat(dataArithmetic);\r\n    }catch (err) {\r\n      console.log(err);\r\n      throw new Error(err);\r\n    }\r\n  }\r\n\r\n  encode(input) {\r\n    var _keyStr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\r\n    var output = \"\";\r\n    var chr1, chr2, chr3, enc1, enc2, enc3, enc4;\r\n    var i = 0;\r\n    while (i < input.length) {\r\n      chr1 = input.charCodeAt(i++);\r\n      chr2 = input.charCodeAt(i++);\r\n      chr3 = input.charCodeAt(i++);\r\n      enc1 = chr1 >> 2;\r\n      enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\r\n      enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\r\n      enc4 = chr3 & 63;\r\n      if (isNaN(chr2)) {\r\n        enc3 = enc4 = 64;\r\n      } else if (isNaN(chr3)) {\r\n        enc4 = 64;\r\n      }\r\n      output = output + _keyStr.charAt(enc1) + _keyStr.charAt(enc2) + _keyStr.charAt(enc3) + _keyStr.charAt(enc4);\r\n    }\r\n\r\n    return output;\r\n  }\r\n\r\n  getAuthorization(jsonData) {\r\n    jsonData = jsonData || {};\r\n    var defaultUser = jsonData.user || \"root\";\r\n    var defaultPassword = jsonData.password || \"taosdata\";\r\n\r\n    return \"Basic \" + this.encode(defaultUser + \":\" + defaultPassword);\r\n  }\r\n\r\n  generateTimeshift(options, target) {\r\n    var alias = target.alias || \"\";\r\n    alias = this.templateSrv.replace(alias, options.scopedVars, 'csv');\r\n    return alias;\r\n  }\r\n  generateAlias(options, target) {\r\n    var alias = target.alias || \"\";\r\n    alias = this.templateSrv.replace(alias, options.scopedVars, 'csv');\r\n    return alias;\r\n  }\r\n\r\n  metricFindQuery(query, options) {\r\n    this.options=options;\r\n    console.log('options',options);\r\n    return this.request('/rest/sql', this.generateSql(query)).then(res=>{\r\n      if (!res||!res.data||!res.data.data) {\r\n        return [];\r\n      }else{\r\n        console.log('res',res);\r\n        let values = [];\r\n        for (let i = 0; i < res.data.data.length; i++) {\r\n          values.push({text:''+res.data.data[i]});\r\n        }\r\n        return values;\r\n      }\r\n    });\r\n  }\r\n}\r\n"]}